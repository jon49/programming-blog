// Generated by LiveScript 1.2.0
var coreConfig, propDo, postList;
coreConfig = {
  head: {
    description: "A blog on programming. Mostly JavaScript.",
    title: "Jon's Blog",
    stylesheets: [
      {
        url: "//yui.yahooapis.com/pure/0.5.0/pure-min.css"
      }, {
        url: "//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css"
      }, {
        url: "/css/style.css"
      }
    ]
  },
  menuItems: [
    {
      value: "Archive",
      url: "/",
      title: ""
    }, {
      value: "About",
      url: "/about",
      title: ""
    }
  ],
  header: {
    url: "/",
    'class': "",
    src: "/images/fire.png",
    title: "This is a Filler",
    subtitle: "Filling Up"
  },
  content: {
    article: "Loading..."
  },
  tags: [],
  previousPost: {
    value: "",
    title: "",
    url: ""
  },
  nextPost: {
    value: "",
    title: "",
    url: ""
  },
  footerItems: [
    {
      value: "",
      url: "http://thisisafiller-jon.tumblr.com/rss",
      title: "RSS Feed",
      'class': "fa fa-rss fa-2x"
    }, {
      value: "",
      url: "https://github.com/jon49/",
      title: "Personal Github Account",
      'class': "fa fa-github fa-2x"
    }, {
      value: "",
      url: "https://twitter.com/NymanJon",
      title: "Personal Twitter Account",
      'class': "fa fa-twitter fa-2x"
    }, {
      value: "",
      url: "https://plus.google.com/communities/101170592821781215530",
      title: "Prescott Developer's Google+ Site",
      'class': "fa fa-google-plus fa-2x"
    }, {
      value: "",
      url: "http://www.meetup.com/The-Prescott-Software-Developers-Meetup-Group/",
      title: "Prescott Developer's Meetup.com Site",
      'class': "fa fa-coffee fa-2x"
    }
  ],
  footer: {
    text: m.trust("&copy; 2014 Jon Nyman<br />nymanjon@gmail.com<br />Still Empty")
  },
  fileType: "",
  posts: m.prop([]),
  postMetadata: function(){
    var postMetadata;
    postMetadata = {
      method: "GET",
      url: "/posts/metadata.json"
    };
    return m.request(postMetadata);
  }()
};
propDo = curry$(function(prop, fn, value){
  prop(fn.call(null, value));
});
postList = {
  method: "GET",
  url: "/posts/posts.json"
};
m.request(postList).then(propDo(coreConfig.posts, function(it){
  return it.posts.map(function(uglyUrl){
    return uglyUrl.replace(postUglyPattern, withFriendlyPostUrl);
  });
}));
function curry$(f, bound){
  var context,
  _curry = function(args) {
    return f.length > 1 ? function(){
      var params = args ? args.concat() : [];
      context = bound ? context || this : this;
      return params.push.apply(params, arguments) <
          f.length && arguments.length ?
        _curry.call(context, params) : f.apply(context, params);
    } : f;
  };
  return _curry();
}