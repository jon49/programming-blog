;(function(){
// Generated by LiveScript 1.2.0
var isObject, assign, dirname, joinPath;
isObject = function(obj){
  var type;
  type = typeof obj;
  return type === 'function' || type === 'object' && !!obj;
};
assign = function(obj){
  var source, prop, i, length, k, v;
  if (!isObject(obj)) {
    return obj;
  }
  source = void 8;
  prop = void 8;
  i = 1;
  length = arguments.length;
  while (i < length) {
    source = arguments[i];
    for (k in source) {
      v = source[k];
      obj[k] = v;
    }
    i++;
  }
  return obj;
};
dirname = function(path){
  return join(path('..'));
};
joinPath = function(){
  var parts, i, l, newParts, part;
  parts = [];
  i = 0;
  l = arguments.length;
  while (i < l) {
    parts = parts.concat(arguments[i].split('/'));
    i++;
  }
  newParts = [];
  i = -1;
  l = parts.length;
  while (i < l) {
    i++;
    part = parts[i];
    if (!part || part === '.') {
      continue;
    }
    if (part === '..') {
      newParts.pop();
    } else {
      newParts.push(part);
    }
  }
  if (parts[0] === '') {
    newParts.unshift('');
  }
  return newParts.join('/') || (newParts.length ? '/' : '.');
};
// Generated by LiveScript 1.2.0
var coreConfig;
coreConfig = {
  head: {
    description: "A blog on programming. Mostly JavaScript.",
    title: "Jon's Blog",
    stylesheets: [
      {
        url: "//yui.yahooapis.com/pure/0.5.0/pure-min.css"
      }, {
        url: "//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css"
      }, {
        url: "/css/style.css"
      }
    ]
  },
  menuItems: [
    {
      value: "Home",
      url: "/",
      title: ""
    }, {
      value: "Blog",
      url: "/blog",
      title: ""
    }, {
      value: "About",
      url: "/about",
      title: ""
    }
  ],
  header: {
    url: "/",
    'class': "",
    src: "./images/fire.png",
    title: "This is a Filler",
    subtitle: "Filling Up"
  },
  content: {
    article: "Loading..."
  },
  tags: [],
  previousPost: {
    value: "",
    title: "",
    url: ""
  },
  nextPost: {
    value: "",
    title: "",
    url: ""
  },
  footerItems: [
    {
      value: "",
      url: "https://github.com/jon49/",
      title: "Personal Github Account",
      'class': "fa fa-github fa-2x"
    }, {
      value: "",
      url: "https://twitter.com/NymanJon",
      title: "Personal Twitter Account",
      'class': "fa fa-twitter fa-2x"
    }
  ],
  footer: {
    text: m.trust("&copy; 2014 Jon Nyman<br />nymanjon@gmail.com<br />Still Empty")
  }
};
// Generated by LiveScript 1.2.0
var link, links, head, menu, header, content, footerMenu, footer, mainContent, main;
link = function(it){
  return m('a', {
    'class': it['class'],
    href: it.url,
    title: it.title,
    config: it.url.indexOf(":") === -1 ? m.route : ""
  }, it.value);
};
links = function(items){
  var linkList;
  linkList = (items || []).map(link);
  return m('ul', linkList);
};
head = function(head){
  var link, stylesheets;
  link = function(it){
    return m("link", {
      rel: "stylesheet",
      href: it.url
    });
  };
  stylesheets = (head.stylesheets || []).map(link);
  return m('head', stylesheets.concat((m('meta', {
    charset: "utf-8"
  }), m('meta', {
    httpEquiv: "X-UA-Compatible",
    content: "IE:edge,chrome:1"
  }), m('meta', {
    name: "viewport",
    content: "width=device-width, initial-scale=1.0"
  }), m('meta', {
    name: "description",
    content: head.description
  }), m("meta", {
    name: "generator",
    content: "maws v0.0.0"
  }), m('title', (head.title ? head.title + ' | ' : '') + "Jon's Blog"), m('link', {
    rel: "shortcut icon",
    href: "./favicon.ico"
  }))));
};
menu = function(it){
  return m('.menu', [links(it)]);
};
header = function(it){
  return m('.header', [
    m('a', {
      href: it.url,
      'class': it['class']
    }, [m('img', {
      src: it.src
    })]), m('h1', it.title), m('h2.subtitle.fancy', m('span', it.subtitle))
  ]);
};
content = function(it){
  return [m('article.content', it.article)];
};
footerMenu = function(it){
  return m('#footer-menu.menu', [links(it)]);
};
footer = function(it){
  return m('footer.footer', [m('p', it.text)]);
};
mainContent = function(mithHeader, mithContent, mithMenuFooter, mithFooter){
  return m('#main', [mithHeader].concat([mithContent, mithMenuFooter, mithFooter]));
};
main = function(ctrl){
  var config;
  config = ctrl.config;
  return m('html', [m('head', head(config.head)), m('body', [menu(config.menuItems), mainContent(header(config.header), content(config.content), footerMenu(config.footerItems), footer(config.footer))])]);
};
// Generated by LiveScript 1.2.0
var getUrl, extractObject, parseDocument, extractDocument;
getUrl = function(route){
  if ((route.match(/\//g) || []).length === 1 && route.length > 1) {
    return joinPath("pages", route + ".html");
  } else {
    return "/pages/index.html";
  }
};
extractObject = function(it){
  var start, end;
  start = it.indexOf("{");
  end = it.lastIndexOf("}") + 1;
  if (start && end) {
    return it.slice(start, end);
  } else {
    return "";
  }
};
parseDocument = function(it){
  var left, right, result;
  if (it.length === 1) {
    return {
      content: {
        article: it.replace(/"/g, "\\\"").replace(/\//g, "\\/").replace(/\n/g, "")
      }
    };
  } else {
    left = extractObject(it[0]).slice(0, -1);
    right = it[1].replace(/"/g, "\\\"").replace(/\//g, "\\/").replace(/\n/g, "");
    return result = left + ", \"content\": {\"article\": \"" + right + "\"}}";
  }
};
extractDocument = function(it){
  return parseDocument(it.responseText.split("-->"));
};
function Controller(){
  var self, settings;
  self = this;
  this.config = coreConfig;
  settings = {
    method: "GET",
    url: getUrl(m.route()),
    extract: extractDocument
  };
  m.request(settings).then(function(it){
    var newConfig;
    it.content.article = m.trust(it.content.article);
    newConfig = assign({}, coreConfig, it);
    self.config = newConfig;
  });
}
// Generated by LiveScript 1.2.0
var app;
app = {
  view: main,
  controller: Controller
};
m.route.mode = "pathname";
m.route(document, "/", {
  "/": app,
  "/:page": app
});
})()