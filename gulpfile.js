// Generated by LiveScript 1.2.0
var gulp, path, del, lodash, browserify, pdc, feed, gulpSitemap, _, sitemap, stylus, manifest, concat, rename, wrapper, filter, replace, livescript, uglify, frontMatter, ssg, es, pluck, data, source, pandoc, toHtml, toSimpleHtml, posted, toUrlPath, toUrlStylePath, feedData, createFeed;
gulp = require('gulp');
path = require('path');
del = require('del');
lodash = require('lodash');
browserify = require('browserify');
pdc = require('pdc');
feed = require('feed');
gulpSitemap = require('gulp-sitemap');
_ = lodash;
sitemap = gulpSitemap;
stylus = require('gulp-stylus');
manifest = require('gulp-asset-manifest');
concat = require('gulp-concat');
rename = require('gulp-rename');
wrapper = require('gulp-wrapper');
filter = require('gulp-filter');
replace = require('gulp-regex-replace');
livescript = require('gulp-livescript');
uglify = require('gulp-uglify');
frontMatter = require('gulp-front-matter');
ssg = require('gulp-ssg');
es = require('event-stream');
pluck = require('gulp-pluck');
data = require('gulp-data');
source = require('vinyl-source-stream');
pandoc = require('gulp-pandoc');
toHtml = {
  from: 'markdown',
  to: 'html',
  ext: '.html',
  args: ['--smart', '--template=/home/jon/Documents/source/repos/websites/jon.prescottprogrammers.com/src/template.html', '--no-wrap']
};
toSimpleHtml = {
  from: 'markdown',
  to: 'html',
  ext: '.html',
  args: ['--smart', '--no-wrap']
};
posted = function(file){
  return /\d{4}/.test(file.path) || /pages/.test(file.path);
};
toUrlPath = function(fileName){
  var s, index, dir;
  s = fileName.toLowerCase();
  index = s.lastIndexOf('.');
  return dir = (function(){
    switch (false) {
    case fileName === 'index.html':
      return '/' + s.slice(0, index).replace(/-/g, '/') + '/';
    default:
      return '/';
    }
  }());
};
toUrlStylePath = function(file){
  var s, i, dir, fileName;
  s = file.basename.toLowerCase();
  i = s.lastIndexOf('-' === -1)
    ? s.length
    : s.lastIndexOf('-');
  dir = '/' + s.slice(0, i).replace(/-/g, '/');
  fileName = s.slice(i + 1);
  file.dirname = (function(){
    switch (false) {
    case s === 'index':
      return dir + "/" + fileName;
    default:
      return '';
    }
  }());
  file.basename = 'index';
  file.ext = '.html';
};
gulp.task('clean', function(){
  return del(['./dist/**', './dev/**', './src/ls/**/*.js'], function(){});
});
gulp.task('images', ['clean'], function(){
  var distDest;
  distDest = './dist/images';
  return gulp.src('./src/images/**').pipe(gulp.dest(distDest));
});
gulp.task('js', ['images'], function(){
  var distDest;
  distDest = './dist/js';
  return browserify({
    entries: ['./src/ls/app.ls'],
    extensions: ['.ls']
  }).bundle().pipe(source('app.js')).pipe(gulp.dest(distDest));
});
gulp.task('ugly', ['js'], function(){
  var distDest;
  distDest = './dist/js';
  return gulp.src('./dist/js/app.js').pipe(uglify()).pipe(rename('app-min.js')).pipe(gulp.dest(distDest));
});
gulp.task('html', ['js'], function(){
  var distDest;
  distDest = './dist';
  return gulp.src('./src/**/*.md').pipe(filter(posted)).pipe(pandoc(toHtml)).pipe(rename(toUrlStylePath)).pipe(gulp.dest(distDest));
});
gulp.task('sitemap', ['html'], function(){
  var distDest;
  distDest = './dist';
  return gulp.src('./dist/**/*.html', {
    read: false
  }).pipe(sitemap({
    siteUrl: 'http://jon.prescottprogrammers.com'
  })).pipe(gulp.dest(distDest));
});
feedData = {
  title: 'Jon\'s Programming Blog Feed',
  description: 'A blog on programming concepts, etc.',
  link: 'http://jon.prescottprogrammers.com',
  image: 'http://jon.prescottprogrammers.com/images/fire.png',
  copyright: 'Copyright Â© 2014 Jon Nyman. Link back to this blog if using info from this blog.',
  author: {
    name: 'Jon Nyman',
    email: 'nymanjon@gmail.com',
    link: 'https://github.com/jon49'
  }
};
createFeed = function(meta){
  var feed_;
  feed_ = new feed(feedData);
  meta.forEach(function(it){
    switch (false) {
    case !/\/\d{4}\/\d{2}\/\d{2}/.test(it.url):
      feed_.addItem({
        title: it.title,
        link: "http://jon.prescottprogrammers.com" + it.url,
        description: it.contents,
        date: new Date(it.date)
      });
    }
  });
  return feed_;
};
gulp.task('json', ['html'], function(){
  var distDest;
  distDest = './dist';
  return gulp.src('./src/**/*.md').pipe(filter(posted)).pipe(frontMatter({
    property: 'meta'
  })).pipe(pandoc(toSimpleHtml)).pipe(data(function(file){
    file.meta.url = toUrlPath(path.basename(file.relative));
  })).pipe(pluck('meta', 'data.json')).pipe(data(function(file){
    file.meta = _.sortBy(file.meta, 'url').reverse();
    file.contents = new Buffer(JSON.stringify(file.meta));
  })).pipe(gulp.dest(distDest)).pipe(data(function(file){
    file.feed = createFeed(file.meta);
    file.contents = new Buffer(file.feed.render('atom-1.0'));
    file.path = path.join(path.dirname(file.path), 'feed.xml');
  })).pipe(gulp.dest(distDest));
});
gulp.task('css', ['js'], function(){
  var distDest;
  distDest = './dist/css';
  return gulp.src('./src/css/*.styl').pipe(stylus()).pipe(gulp.dest(distDest));
});
gulp.task('default', ['clean', 'images', 'html', 'sitemap', 'json', 'js', 'css', 'ugly']);