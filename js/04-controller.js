// Generated by LiveScript 1.2.0
var getUrl, extractObject, parseDocument, extractDocument;
getUrl = function(route){
  if ((route.match(/\//g) || []).length === 1 && route.length > 1) {
    return joinPath("pages", route + ".html");
  } else {
    return "/pages/index.html";
  }
};
extractObject = function(it){
  var start, end;
  start = it.indexOf("{");
  end = it.lastIndexOf("}") + 1;
  if (start && end) {
    return it.slice(start, end);
  } else {
    return "";
  }
};
parseDocument = function(it){
  var left, right, result;
  if (it.length === 1) {
    return {
      content: {
        article: it.replace(/"/g, "\\\"").replace(/\//g, "\\/").replace(/\n/g, "")
      }
    };
  } else {
    left = extractObject(it[0]).slice(0, -1);
    right = it[1].replace(/"/g, "\\\"").replace(/\//g, "\\/").replace(/\n/g, "");
    return result = left + ", \"content\": {\"article\": \"" + right + "\"}}";
  }
};
extractDocument = function(it){
  return parseDocument(it.responseText.split("-->"));
};
function Controller(){
  var self, settings;
  self = this;
  this.config = coreConfig;
  settings = {
    method: "GET",
    url: getUrl(m.route()),
    extract: extractDocument
  };
  m.request(settings).then(function(it){
    var newConfig;
    it.content.article = m.trust(it.content.article);
    newConfig = assign({}, coreConfig, it);
    self.config = newConfig;
  });
}