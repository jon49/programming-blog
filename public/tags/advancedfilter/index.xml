<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Advancedfilter on Hamsters Byte</title>
    <link>http://localhost:1313/tags/advancedfilter/</link>
    <description>Recent content in Advancedfilter on Hamsters Byte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Oct 2012 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/advancedfilter/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Scribble Filter (For Excel) Overview Part 3</title>
      <link>http://localhost:1313/2012/10/22/scribble_filter_for_excel_overview_part_3/</link>
      <pubDate>Mon, 22 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2012/10/22/scribble_filter_for_excel_overview_part_3/</guid>
      <description>&lt;p&gt;Points discussed in video:&lt;/p&gt;

&lt;p&gt;The scribble filter is a text wrapper for the Advanced Filter in Excel,
making it easy to work with and adding new capabilities.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Special Functions Defined
&lt;a href=&#34;http://www.youtube.com/watch?v=pL6dWa25tV8&amp;amp;feature=player_detailpage#t=4s&#34;&gt;@00:04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Top or bottom (also purpose for chaining)
&lt;a href=&#34;http://www.youtube.com/watch?v=pL6dWa25tV8&amp;amp;feature=player_detailpage#t=30s&#34;&gt;@00:30&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Top or bottom by percent
&lt;a href=&#34;http://www.youtube.com/watch?v=pL6dWa25tV8&amp;amp;feature=player_detailpage#t=130s&#34;&gt;@02:10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Above or below average
&lt;a href=&#34;http://www.youtube.com/watch?v=pL6dWa25tV8&amp;amp;feature=player_detailpage#t=172s&#34;&gt;@02:52&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://wp.me/P26YjB-7Z&#34;&gt;Scribble Filter Home&lt;/a&gt;\
 &lt;a href=&#34;http://wp.me/P26YjB-82&#34;&gt;Scribble Filter Help&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://wp.me/p26YjB-85&#34;&gt;Overview Part 1&lt;/a&gt;\
 &lt;a href=&#34;http://wp.me/p26YjB-8o&#34;&gt;Overview Part 2&lt;/a&gt;\
 &lt;a href=&#34;http://wp.me/p26YjB-8s&#34;&gt;Overview Part 3&lt;/a&gt;\
 &lt;a href=&#34;http://wp.me/p26YjB-8Y&#34;&gt;Overview Part 4&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Scribble Filter Overview Part 1</title>
      <link>http://localhost:1313/2012/10/15/scribble_filter_overview/</link>
      <pubDate>Mon, 15 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2012/10/15/scribble_filter_overview/</guid>
      <description>&lt;p&gt;Points discussed in video:&lt;/p&gt;

&lt;p&gt;The scribble filter is a wrapper for the Advanced Filter in Excel,
making it easy to work with and adding new capabilities.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To get the date spans right click on the left calendar button.&lt;/li&gt;
&lt;li&gt;Use tab or enter to get the first line from the drop down menu.&lt;/li&gt;
&lt;li&gt;Right click on buttons to get more options (e.g., right click on
report button to set type of report to create: On separate sheet,
preview, in place, chain).&lt;/li&gt;
&lt;li&gt;Order of precedence is CHAIN, then AND, then OR. Use parentheses if
you want something ORed first, otherwise it will be ANDed first.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://wp.me/P26YjB-7Z&#34;&gt;Scribble Filter Home&lt;/a&gt;\
 &lt;a href=&#34;http://wp.me/P26YjB-82&#34;&gt;Scribble Filter Help&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://wp.me/p26YjB-85&#34;&gt;Overview Part 1&lt;/a&gt;\
&lt;a href=&#34;http://wp.me/p26YjB-8o&#34;&gt;Overview Part 2&lt;/a&gt;\
&lt;a href=&#34;http://wp.me/p26YjB-8s&#34;&gt;Overview Part 3&lt;/a&gt;\
&lt;a href=&#34;http://wp.me/p26YjB-8Y&#34;&gt;Overview Part 4&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AdvancedFilter: Parsing the Search String</title>
      <link>http://localhost:1313/2012/08/06/advancedfilter_parsing/</link>
      <pubDate>Mon, 06 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2012/08/06/advancedfilter_parsing/</guid>
      <description>&lt;p&gt;One of the most difficult parts of creating an advanced filter class is
figuring out how to parse the search data and turn it into a 2D array,
which Excel can understand. I figured my user interface will be a
string. So I started there. In my original implementation of the search
algorithm it wasn’t very robust, so this time around I figured I would
do it “right.”&lt;/p&gt;

&lt;p&gt;Well, &lt;a href=&#34;http://stackoverflow.com/a/29124&#34;&gt;right is a relative term&lt;/a&gt;. The
“right way” is using a &lt;a href=&#34;http://en.wikipedia.org/wiki/Recursive_descent_parser&#34;&gt;recursive descent
parser&lt;/a&gt;, which
seems overly complicated to me. But &lt;a href=&#34;http://stackoverflow.com/a/47717&#34;&gt;a simpler approach that I
found&lt;/a&gt; is a &lt;a href=&#34;http://en.wikipedia.org/wiki/Shunting_yard_algorithm&#34;&gt;shunting yard
algorithm&lt;/a&gt;. This
will suit my purposes well.&lt;/p&gt;

&lt;p&gt;Now, the reason I am building an AdvancedFilter class is to make it
possible to have the user create a unique report – before I used it as a
filter in my VBA code also, but since I am now using .NET I can just use
&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/bb763068.aspx&#34;&gt;LINQ&lt;/a&gt;. Although
not a huge deal for the &lt;a href=&#34;http://www.spreadsheetbudget.com/products/excel-time-card/&#34;&gt;Excel Time
Card&lt;/a&gt; add-in
(but still nice to have), this tool will be a tremendous plus for the
&lt;a href=&#34;http://www.spreadsheetbudget.com/&#34;&gt;Spreadsheet Budget&lt;/a&gt; – if people like
it enough I might even release it as its own project.&lt;/p&gt;

&lt;p&gt;So this is how I imagine the user interacting with the Report Generator.
A simple text box (I like to keep things as simple as possible
&lt;img src=&#34;http://www.spreadsheetbudget.com/wp-includes/images/smilies/icon_smile.gif&#34; alt=&#34;:)&#34; /&gt;

) will be on a windows form. When the user types there will be helps for
the user to choose from in an auto complete drop down box. Below would
be a possible report requested from a user (called &lt;a href=&#34;http://en.wikipedia.org/wiki/Infix_notation&#34;&gt;infix
notation&lt;/a&gt; – you learn quite
a bit of English when you code):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[Jobs]= Job1 AND [Time]&amp;gt;2 OR ([Jobs]=Job2 OR [Jobs]=Job3 AND
[Comments]=Project*)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I need the parentheses since &lt;a href=&#34;http://en.wikipedia.org/wiki/Logical_connective#Order_of_precedence&#34;&gt;logic order of
operations&lt;/a&gt;
dictates that AND is before OR. Now I only need to worry about AND and
ORs because Excel will figure out the rest for me, e.g., instead of
putting&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[Jobs]=Job2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;one could put&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[Jobs]&amp;lt;&amp;gt;Job2.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, this may look difficult for a user, but remember, there will be a
drop down list for a user to choose from. Also, I will pull out the
dates and supply a calendar to make it even easier on the user.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://andreinc.net/2010/10/05/converting-infix-to-rpn-shunting-yard-algorithm/&#34;&gt; I found someone that put the shunting algorithm in
Java&lt;/a&gt;.
After programming for some time, it becomes much easier to look at the
work of others in different languages and convert them to your own.
Since not a whole lot is written in VB.NET this is a must for the VB
programmer. After fixing the mistakes I made when transcribing the code,
I was able to proceed.&lt;/p&gt;

&lt;p&gt;The shunting algorithm I used puts the data in  &lt;a href=&#34;http://en.wikipedia.org/wiki/Reverse_Polish_notation&#34;&gt;Reverse Polish
notation&lt;/a&gt; (RPN).
This notation is a bit confusing at first. But once you look at it for a
while you get used to it. Let’s take the example shown in the Java code
mentioned above. So this is the equation you need to parse:&lt;/p&gt;

&lt;p&gt;(1+2)*(&lt;sup&gt;3&lt;/sup&gt;&amp;frasl;&lt;sub&gt;4&lt;/sub&gt;)\^(5+6)&lt;/p&gt;

&lt;p&gt;The result after putting the code through the shunting algorithm is:&lt;/p&gt;

&lt;p&gt;1 2 + 3 4 / 5 6 + \^ *&lt;/p&gt;

&lt;p&gt;So, to get the answer from the RPN notation we need to start from left
to right. If there are two numbers in a row then perform operation, else
goto next. If there are two operators in a row then get previous
solutions and perform operation.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;1+2=3&lt;/li&gt;
&lt;li&gt;Store 3&lt;/li&gt;
&lt;li&gt;&lt;sup&gt;3&lt;/sup&gt;&amp;frasl;&lt;sub&gt;4&lt;/sub&gt;=0.75&lt;/li&gt;
&lt;li&gt;Store 0.75&lt;/li&gt;
&lt;li&gt;5+6=11&lt;/li&gt;
&lt;li&gt;Store 11&lt;/li&gt;
&lt;li&gt;Get previous two solutions.&lt;/li&gt;
&lt;li&gt;0.75\^11=0.0422&lt;/li&gt;
&lt;li&gt;Get previous solution.&lt;/li&gt;
&lt;li&gt;3*0.0422=0.127&lt;/li&gt;
&lt;li&gt;Return 0.127&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A little strange at first blush but after staring at it for a little
while it starts to make sense.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>