// Generated by LiveScript 1.2.0
var m, config, λ, parseDocument, extractDocument, toConfigStyle;
m = require('mithril');
config = require('./../configuration/config');
λ = require('./../../js/custom-lodash');
/---htmlpreprocessing---/;
parseDocument = function(it){
  return JSON.stringify({
    article: it.contents
  });
};
extractDocument = function(it){
  switch (false) {
  case !λ.isPlainObject(it):
    return parseDocument(it);
  default:
    return JSON.stringify({
      title: "404",
      subtitle: "You've Been 404ed",
      article: "Oops! I couldn't find that page!",
      type: 'page'
    });
  }
};
/---configobjectpreprocessing--/;
toConfigStyle = function(it){
  var x;
  x = {};
  (x.head || (x.head = {})).description = it.description;
  (x.head || (x.head = {})).title = it.title;
  (x.content || (x.content = {})).article = it.contents;
  (x.header || (x.header = {})).title = it.title;
  (x.header || (x.header = {})).subtitle = it.subtitle;
  x.fileType = it.type;
  x.tags = it.tags;
  return x;
};
function Controller(){
  var self, jsonData, createNewConfig, orCreate404Config, setConfig;
  self = this;
  this.config = config;
  jsonData = {
    method: "GET",
    url: '/data.json'
  };
  createNewConfig = orCreate404Config = function(){
    var data;
    data = toConfigStyle(λ.find(config.data, {
      url: m.route()
    }));
    data.content.article = m.trust(data.content.article);
    self.config = λ.merge({}, config, data);
  };
  setConfig = function(it){
    config.data = it;
    createNewConfig();
  };
  (function(){
    switch (false) {
    case config.data !== void 8:
      m.request(jsonData).then(setConfig, orCreate404Config);
      break;
    default:
      createNewConfig();
    }
  })();
}
module.exports = Controller;